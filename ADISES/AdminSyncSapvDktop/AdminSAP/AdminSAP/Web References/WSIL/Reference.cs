//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AdminSAP.WSIL {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DIServerSoap", Namespace="http://127.0.0.1/SAP/")]
    public partial class DIServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InteractOperationCompleted;
        
        private System.Threading.SendOrPostCallback DIServerBIOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBusinessObjectTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SBObobOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DIServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QROperationCompleted;
        
        private System.Threading.SendOrPostCallback TokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginSSLOperationCompleted;
        
        private System.Threading.SendOrPostCallback TESTOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DIServer() {
            this.Url = global::AdminSAP.Properties.Settings.Default.SapService_WSIL_DIServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InformationCompletedEventHandler InformationCompleted;
        
        /// <remarks/>
        public event InteractCompletedEventHandler InteractCompleted;
        
        /// <remarks/>
        public event DIServerBICompletedEventHandler DIServerBICompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event ValidateCompletedEventHandler ValidateCompleted;
        
        /// <remarks/>
        public event GetBusinessObjectTemplateCompletedEventHandler GetBusinessObjectTemplateCompleted;
        
        /// <remarks/>
        public event ReadObjectsCompletedEventHandler ReadObjectsCompleted;
        
        /// <remarks/>
        public event ExecuteSQLCompletedEventHandler ExecuteSQLCompleted;
        
        /// <remarks/>
        public event SBObobCompletedEventHandler SBObobCompleted;
        
        /// <remarks/>
        public event AddObjectCompletedEventHandler AddObjectCompleted;
        
        /// <remarks/>
        public event UpdateObjectCompletedEventHandler UpdateObjectCompleted;
        
        /// <remarks/>
        public event DIServicesCompletedEventHandler DIServicesCompleted;
        
        /// <remarks/>
        public event QRCompletedEventHandler QRCompleted;
        
        /// <remarks/>
        public event TokenCompletedEventHandler TokenCompleted;
        
        /// <remarks/>
        public event LoginSSLCompletedEventHandler LoginSSLCompleted;
        
        /// <remarks/>
        public event TESTCompletedEventHandler TESTCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/Information", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Information() {
            object[] results = this.Invoke("Information", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InformationAsync() {
            this.InformationAsync(null);
        }
        
        /// <remarks/>
        public void InformationAsync(object userState) {
            if ((this.InformationOperationCompleted == null)) {
                this.InformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformationOperationCompleted);
            }
            this.InvokeAsync("Information", new object[0], this.InformationOperationCompleted, userState);
        }
        
        private void OnInformationOperationCompleted(object arg) {
            if ((this.InformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformationCompleted(this, new InformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/Interact", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Interact(string SessionID, string SOAPCommand) {
            object[] results = this.Invoke("Interact", new object[] {
                        SessionID,
                        SOAPCommand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InteractAsync(string SessionID, string SOAPCommand) {
            this.InteractAsync(SessionID, SOAPCommand, null);
        }
        
        /// <remarks/>
        public void InteractAsync(string SessionID, string SOAPCommand, object userState) {
            if ((this.InteractOperationCompleted == null)) {
                this.InteractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInteractOperationCompleted);
            }
            this.InvokeAsync("Interact", new object[] {
                        SessionID,
                        SOAPCommand}, this.InteractOperationCompleted, userState);
        }
        
        private void OnInteractOperationCompleted(object arg) {
            if ((this.InteractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InteractCompleted(this, new InteractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/DIServerBI", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DIServerBI(string SessionID, string SOAPCommands) {
            object[] results = this.Invoke("DIServerBI", new object[] {
                        SessionID,
                        SOAPCommands});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DIServerBIAsync(string SessionID, string SOAPCommands) {
            this.DIServerBIAsync(SessionID, SOAPCommands, null);
        }
        
        /// <remarks/>
        public void DIServerBIAsync(string SessionID, string SOAPCommands, object userState) {
            if ((this.DIServerBIOperationCompleted == null)) {
                this.DIServerBIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDIServerBIOperationCompleted);
            }
            this.InvokeAsync("DIServerBI", new object[] {
                        SessionID,
                        SOAPCommands}, this.DIServerBIOperationCompleted, userState);
        }
        
        private void OnDIServerBIOperationCompleted(object arg) {
            if ((this.DIServerBICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DIServerBICompleted(this, new DIServerBICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/Login", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string License) {
            object[] results = this.Invoke("Login", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer,
                        License});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string License) {
            this.LoginAsync(DataBaseServer, DataBaseName, DataBaseType, DataBaseUserName, DataBasePassword, CompanyUserName, CompanyPassword, Language, LicenseServer, License, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string License, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer,
                        License}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/Logout", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Logout(string SessionID) {
            object[] results = this.Invoke("Logout", new object[] {
                        SessionID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync(string SessionID) {
            this.LogoutAsync(SessionID, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string SessionID, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        SessionID}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/Validate", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Validate(string SessionID) {
            object[] results = this.Invoke("Validate", new object[] {
                        SessionID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAsync(string SessionID) {
            this.ValidateAsync(SessionID, null);
        }
        
        /// <remarks/>
        public void ValidateAsync(string SessionID, object userState) {
            if ((this.ValidateOperationCompleted == null)) {
                this.ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateOperationCompleted);
            }
            this.InvokeAsync("Validate", new object[] {
                        SessionID}, this.ValidateOperationCompleted, userState);
        }
        
        private void OnValidateOperationCompleted(object arg) {
            if ((this.ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCompleted(this, new ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/GetBusinessObjectTemplate", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetBusinessObjectTemplate(string SessionID, string Objects) {
            object[] results = this.Invoke("GetBusinessObjectTemplate", new object[] {
                        SessionID,
                        Objects});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetBusinessObjectTemplateAsync(string SessionID, string Objects) {
            this.GetBusinessObjectTemplateAsync(SessionID, Objects, null);
        }
        
        /// <remarks/>
        public void GetBusinessObjectTemplateAsync(string SessionID, string Objects, object userState) {
            if ((this.GetBusinessObjectTemplateOperationCompleted == null)) {
                this.GetBusinessObjectTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBusinessObjectTemplateOperationCompleted);
            }
            this.InvokeAsync("GetBusinessObjectTemplate", new object[] {
                        SessionID,
                        Objects}, this.GetBusinessObjectTemplateOperationCompleted, userState);
        }
        
        private void OnGetBusinessObjectTemplateOperationCompleted(object arg) {
            if ((this.GetBusinessObjectTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBusinessObjectTemplateCompleted(this, new GetBusinessObjectTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/ReadObjects", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReadObjects(string SessionID, string Objects, string IDName, string IDValue) {
            object[] results = this.Invoke("ReadObjects", new object[] {
                        SessionID,
                        Objects,
                        IDName,
                        IDValue});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReadObjectsAsync(string SessionID, string Objects, string IDName, string IDValue) {
            this.ReadObjectsAsync(SessionID, Objects, IDName, IDValue, null);
        }
        
        /// <remarks/>
        public void ReadObjectsAsync(string SessionID, string Objects, string IDName, string IDValue, object userState) {
            if ((this.ReadObjectsOperationCompleted == null)) {
                this.ReadObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadObjectsOperationCompleted);
            }
            this.InvokeAsync("ReadObjects", new object[] {
                        SessionID,
                        Objects,
                        IDName,
                        IDValue}, this.ReadObjectsOperationCompleted, userState);
        }
        
        private void OnReadObjectsOperationCompleted(object arg) {
            if ((this.ReadObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadObjectsCompleted(this, new ReadObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/ExecuteSQL", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExecuteSQL(string SessionID, string Query) {
            object[] results = this.Invoke("ExecuteSQL", new object[] {
                        SessionID,
                        Query});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSQLAsync(string SessionID, string Query) {
            this.ExecuteSQLAsync(SessionID, Query, null);
        }
        
        /// <remarks/>
        public void ExecuteSQLAsync(string SessionID, string Query, object userState) {
            if ((this.ExecuteSQLOperationCompleted == null)) {
                this.ExecuteSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSQLOperationCompleted);
            }
            this.InvokeAsync("ExecuteSQL", new object[] {
                        SessionID,
                        Query}, this.ExecuteSQLOperationCompleted, userState);
        }
        
        private void OnExecuteSQLOperationCompleted(object arg) {
            if ((this.ExecuteSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSQLCompleted(this, new ExecuteSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/SBObob", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SBObob(string SessionID, string ObjectModel, string Parameter, string ParameterValue) {
            object[] results = this.Invoke("SBObob", new object[] {
                        SessionID,
                        ObjectModel,
                        Parameter,
                        ParameterValue});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SBObobAsync(string SessionID, string ObjectModel, string Parameter, string ParameterValue) {
            this.SBObobAsync(SessionID, ObjectModel, Parameter, ParameterValue, null);
        }
        
        /// <remarks/>
        public void SBObobAsync(string SessionID, string ObjectModel, string Parameter, string ParameterValue, object userState) {
            if ((this.SBObobOperationCompleted == null)) {
                this.SBObobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSBObobOperationCompleted);
            }
            this.InvokeAsync("SBObob", new object[] {
                        SessionID,
                        ObjectModel,
                        Parameter,
                        ParameterValue}, this.SBObobOperationCompleted, userState);
        }
        
        private void OnSBObobOperationCompleted(object arg) {
            if ((this.SBObobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SBObobCompleted(this, new SBObobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/AddObject", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddObject(string SessionID, string BOM, string CommandID) {
            object[] results = this.Invoke("AddObject", new object[] {
                        SessionID,
                        BOM,
                        CommandID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddObjectAsync(string SessionID, string BOM, string CommandID) {
            this.AddObjectAsync(SessionID, BOM, CommandID, null);
        }
        
        /// <remarks/>
        public void AddObjectAsync(string SessionID, string BOM, string CommandID, object userState) {
            if ((this.AddObjectOperationCompleted == null)) {
                this.AddObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddObjectOperationCompleted);
            }
            this.InvokeAsync("AddObject", new object[] {
                        SessionID,
                        BOM,
                        CommandID}, this.AddObjectOperationCompleted, userState);
        }
        
        private void OnAddObjectOperationCompleted(object arg) {
            if ((this.AddObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddObjectCompleted(this, new AddObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/UpdateObject", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UpdateObject(string SessionID, string Objects, string QueryParams, string BOMData, string CommandID) {
            object[] results = this.Invoke("UpdateObject", new object[] {
                        SessionID,
                        Objects,
                        QueryParams,
                        BOMData,
                        CommandID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateObjectAsync(string SessionID, string Objects, string QueryParams, string BOMData, string CommandID) {
            this.UpdateObjectAsync(SessionID, Objects, QueryParams, BOMData, CommandID, null);
        }
        
        /// <remarks/>
        public void UpdateObjectAsync(string SessionID, string Objects, string QueryParams, string BOMData, string CommandID, object userState) {
            if ((this.UpdateObjectOperationCompleted == null)) {
                this.UpdateObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateObjectOperationCompleted);
            }
            this.InvokeAsync("UpdateObject", new object[] {
                        SessionID,
                        Objects,
                        QueryParams,
                        BOMData,
                        CommandID}, this.UpdateObjectOperationCompleted, userState);
        }
        
        private void OnUpdateObjectOperationCompleted(object arg) {
            if ((this.UpdateObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateObjectCompleted(this, new UpdateObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/DIServices", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DIServices(string SessionID, string Service, string SOAPCommand, string Parameters) {
            object[] results = this.Invoke("DIServices", new object[] {
                        SessionID,
                        Service,
                        SOAPCommand,
                        Parameters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DIServicesAsync(string SessionID, string Service, string SOAPCommand, string Parameters) {
            this.DIServicesAsync(SessionID, Service, SOAPCommand, Parameters, null);
        }
        
        /// <remarks/>
        public void DIServicesAsync(string SessionID, string Service, string SOAPCommand, string Parameters, object userState) {
            if ((this.DIServicesOperationCompleted == null)) {
                this.DIServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDIServicesOperationCompleted);
            }
            this.InvokeAsync("DIServices", new object[] {
                        SessionID,
                        Service,
                        SOAPCommand,
                        Parameters}, this.DIServicesOperationCompleted, userState);
        }
        
        private void OnDIServicesOperationCompleted(object arg) {
            if ((this.DIServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DIServicesCompleted(this, new DIServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/QR", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QR() {
            this.Invoke("QR", new object[0]);
        }
        
        /// <remarks/>
        public void QRAsync() {
            this.QRAsync(null);
        }
        
        /// <remarks/>
        public void QRAsync(object userState) {
            if ((this.QROperationCompleted == null)) {
                this.QROperationCompleted = new System.Threading.SendOrPostCallback(this.OnQROperationCompleted);
            }
            this.InvokeAsync("QR", new object[0], this.QROperationCompleted, userState);
        }
        
        private void OnQROperationCompleted(object arg) {
            if ((this.QRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QRCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/Token", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Token(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string License) {
            object[] results = this.Invoke("Token", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer,
                        License});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TokenAsync(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string License) {
            this.TokenAsync(DataBaseServer, DataBaseName, DataBaseType, DataBaseUserName, DataBasePassword, CompanyUserName, CompanyPassword, Language, LicenseServer, License, null);
        }
        
        /// <remarks/>
        public void TokenAsync(string DataBaseServer, string DataBaseName, string DataBaseType, string DataBaseUserName, string DataBasePassword, string CompanyUserName, string CompanyPassword, string Language, string LicenseServer, string License, object userState) {
            if ((this.TokenOperationCompleted == null)) {
                this.TokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTokenOperationCompleted);
            }
            this.InvokeAsync("Token", new object[] {
                        DataBaseServer,
                        DataBaseName,
                        DataBaseType,
                        DataBaseUserName,
                        DataBasePassword,
                        CompanyUserName,
                        CompanyPassword,
                        Language,
                        LicenseServer,
                        License}, this.TokenOperationCompleted, userState);
        }
        
        private void OnTokenOperationCompleted(object arg) {
            if ((this.TokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TokenCompleted(this, new TokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/LoginSSL", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginSSL(string TokenData) {
            object[] results = this.Invoke("LoginSSL", new object[] {
                        TokenData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginSSLAsync(string TokenData) {
            this.LoginSSLAsync(TokenData, null);
        }
        
        /// <remarks/>
        public void LoginSSLAsync(string TokenData, object userState) {
            if ((this.LoginSSLOperationCompleted == null)) {
                this.LoginSSLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginSSLOperationCompleted);
            }
            this.InvokeAsync("LoginSSL", new object[] {
                        TokenData}, this.LoginSSLOperationCompleted, userState);
        }
        
        private void OnLoginSSLOperationCompleted(object arg) {
            if ((this.LoginSSLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginSSLCompleted(this, new LoginSSLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://127.0.0.1/SAP/TEST", RequestNamespace="http://127.0.0.1/SAP/", ResponseNamespace="http://127.0.0.1/SAP/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TEST(Valores datos) {
            this.Invoke("TEST", new object[] {
                        datos});
        }
        
        /// <remarks/>
        public void TESTAsync(Valores datos) {
            this.TESTAsync(datos, null);
        }
        
        /// <remarks/>
        public void TESTAsync(Valores datos, object userState) {
            if ((this.TESTOperationCompleted == null)) {
                this.TESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTESTOperationCompleted);
            }
            this.InvokeAsync("TEST", new object[] {
                        datos}, this.TESTOperationCompleted, userState);
        }
        
        private void OnTESTOperationCompleted(object arg) {
            if ((this.TESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TESTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://127.0.0.1/SAP/")]
    public partial class Valores {
        
        private TiposServidor tipoServidorField;
        
        private TipoObjeto tipoField;
        
        private Languages idiomasField;
        
        private Commands comandosField;
        
        /// <remarks/>
        public TiposServidor tipoServidor {
            get {
                return this.tipoServidorField;
            }
            set {
                this.tipoServidorField = value;
            }
        }
        
        /// <remarks/>
        public TipoObjeto tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        public Languages idiomas {
            get {
                return this.idiomasField;
            }
            set {
                this.idiomasField = value;
            }
        }
        
        /// <remarks/>
        public Commands comandos {
            get {
                return this.comandosField;
            }
            set {
                this.comandosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://127.0.0.1/SAP/")]
    public enum TiposServidor {
        
        /// <remarks/>
        dst_MSSQL,
        
        /// <remarks/>
        dst_DB_2,
        
        /// <remarks/>
        dst_SYBASE,
        
        /// <remarks/>
        dst_MSSQL2005,
        
        /// <remarks/>
        dst_MAXDB,
        
        /// <remarks/>
        dst_MSSQL2008,
        
        /// <remarks/>
        dst_MSSQL2012,
        
        /// <remarks/>
        dst_MSSQL2014,
        
        /// <remarks/>
        dst_HANADB,
        
        /// <remarks/>
        dst_MSSQL2016,
        
        /// <remarks/>
        dst_MSSQL2017,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://127.0.0.1/SAP/")]
    public enum TipoObjeto {
        
        /// <remarks/>
        oChartOfAccounts,
        
        /// <remarks/>
        oBusinessPartners,
        
        /// <remarks/>
        oBanks,
        
        /// <remarks/>
        oItems,
        
        /// <remarks/>
        oVatGroups,
        
        /// <remarks/>
        oPriceLists,
        
        /// <remarks/>
        oSpecialPrices,
        
        /// <remarks/>
        oItemProperties,
        
        /// <remarks/>
        oUsers,
        
        /// <remarks/>
        oInvoices,
        
        /// <remarks/>
        oCreditNotes,
        
        /// <remarks/>
        oDeliveryNotes,
        
        /// <remarks/>
        oReturns,
        
        /// <remarks/>
        oOrders,
        
        /// <remarks/>
        oPurchaseInvoices,
        
        /// <remarks/>
        oPurchaseCreditNotes,
        
        /// <remarks/>
        oPurchaseDeliveryNotes,
        
        /// <remarks/>
        oPurchaseReturns,
        
        /// <remarks/>
        oPurchaseOrders,
        
        /// <remarks/>
        oQuotations,
        
        /// <remarks/>
        oIncomingPayments,
        
        /// <remarks/>
        oJournalVouchers,
        
        /// <remarks/>
        oJournalEntries,
        
        /// <remarks/>
        oStockTakings,
        
        /// <remarks/>
        oContacts,
        
        /// <remarks/>
        oCreditCards,
        
        /// <remarks/>
        oCurrencyCodes,
        
        /// <remarks/>
        oPaymentTermsTypes,
        
        /// <remarks/>
        oBankPages,
        
        /// <remarks/>
        oManufacturers,
        
        /// <remarks/>
        oVendorPayments,
        
        /// <remarks/>
        oLandedCostsCodes,
        
        /// <remarks/>
        oShippingTypes,
        
        /// <remarks/>
        oLengthMeasures,
        
        /// <remarks/>
        oWeightMeasures,
        
        /// <remarks/>
        oItemGroups,
        
        /// <remarks/>
        oSalesPersons,
        
        /// <remarks/>
        oCustomsGroups,
        
        /// <remarks/>
        oChecksforPayment,
        
        /// <remarks/>
        oInventoryGenEntry,
        
        /// <remarks/>
        oInventoryGenExit,
        
        /// <remarks/>
        oWarehouses,
        
        /// <remarks/>
        oCommissionGroups,
        
        /// <remarks/>
        oProductTrees,
        
        /// <remarks/>
        oStockTransfer,
        
        /// <remarks/>
        oWorkOrders,
        
        /// <remarks/>
        oCreditPaymentMethods,
        
        /// <remarks/>
        oCreditCardPayments,
        
        /// <remarks/>
        oAlternateCatNum,
        
        /// <remarks/>
        oBudget,
        
        /// <remarks/>
        oBudgetDistribution,
        
        /// <remarks/>
        oMessages,
        
        /// <remarks/>
        oBudgetScenarios,
        
        /// <remarks/>
        oSalesOpportunities,
        
        /// <remarks/>
        oUserDefaultGroups,
        
        /// <remarks/>
        oSalesStages,
        
        /// <remarks/>
        oActivityTypes,
        
        /// <remarks/>
        oActivityLocations,
        
        /// <remarks/>
        oDrafts,
        
        /// <remarks/>
        oDeductionTaxHierarchies,
        
        /// <remarks/>
        oDeductionTaxGroups,
        
        /// <remarks/>
        oAdditionalExpenses,
        
        /// <remarks/>
        oSalesTaxAuthorities,
        
        /// <remarks/>
        oSalesTaxAuthoritiesTypes,
        
        /// <remarks/>
        oSalesTaxCodes,
        
        /// <remarks/>
        oQueryCategories,
        
        /// <remarks/>
        oFactoringIndicators,
        
        /// <remarks/>
        oPaymentsDrafts,
        
        /// <remarks/>
        oAccountSegmentations,
        
        /// <remarks/>
        oAccountSegmentationCategories,
        
        /// <remarks/>
        oWarehouseLocations,
        
        /// <remarks/>
        oForms1099,
        
        /// <remarks/>
        oInventoryCycles,
        
        /// <remarks/>
        oWizardPaymentMethods,
        
        /// <remarks/>
        oBPPriorities,
        
        /// <remarks/>
        oDunningLetters,
        
        /// <remarks/>
        oUserFields,
        
        /// <remarks/>
        oUserTables,
        
        /// <remarks/>
        oPickLists,
        
        /// <remarks/>
        oPaymentRunExport,
        
        /// <remarks/>
        oUserQueries,
        
        /// <remarks/>
        oMaterialRevaluation,
        
        /// <remarks/>
        oCorrectionPurchaseInvoice,
        
        /// <remarks/>
        oCorrectionPurchaseInvoiceReversal,
        
        /// <remarks/>
        oCorrectionInvoice,
        
        /// <remarks/>
        oCorrectionInvoiceReversal,
        
        /// <remarks/>
        oContractTemplates,
        
        /// <remarks/>
        oEmployeesInfo,
        
        /// <remarks/>
        oCustomerEquipmentCards,
        
        /// <remarks/>
        oWithholdingTaxCodes,
        
        /// <remarks/>
        oBillOfExchangeTransactions,
        
        /// <remarks/>
        oKnowledgeBaseSolutions,
        
        /// <remarks/>
        oServiceContracts,
        
        /// <remarks/>
        oServiceCalls,
        
        /// <remarks/>
        oUserKeys,
        
        /// <remarks/>
        oQueue,
        
        /// <remarks/>
        oSalesForecast,
        
        /// <remarks/>
        oTerritories,
        
        /// <remarks/>
        oIndustries,
        
        /// <remarks/>
        oProductionOrders,
        
        /// <remarks/>
        oPackagesTypes,
        
        /// <remarks/>
        oUserObjectsMD,
        
        /// <remarks/>
        oTeams,
        
        /// <remarks/>
        oRelationships,
        
        /// <remarks/>
        oUserPermissionTree,
        
        /// <remarks/>
        oActivityStatus,
        
        /// <remarks/>
        oChooseFromList,
        
        /// <remarks/>
        oFormattedSearches,
        
        /// <remarks/>
        oAttachments2,
        
        /// <remarks/>
        oUserLanguages,
        
        /// <remarks/>
        oMultiLanguageTranslations,
        
        /// <remarks/>
        oDynamicSystemStrings,
        
        /// <remarks/>
        oHouseBankAccounts,
        
        /// <remarks/>
        oBusinessPlaces,
        
        /// <remarks/>
        oLocalEra,
        
        /// <remarks/>
        oSalesTaxInvoice,
        
        /// <remarks/>
        oPurchaseTaxInvoice,
        
        /// <remarks/>
        BoRecordset,
        
        /// <remarks/>
        BoRecordsetEx,
        
        /// <remarks/>
        BoBridge,
        
        /// <remarks/>
        oNotaFiscalUsage,
        
        /// <remarks/>
        oNotaFiscalCFOP,
        
        /// <remarks/>
        oNotaFiscalCST,
        
        /// <remarks/>
        oClosingDateProcedure,
        
        /// <remarks/>
        oBusinessPartnerGroups,
        
        /// <remarks/>
        oBPFiscalRegistryID,
        
        /// <remarks/>
        oDownPayments,
        
        /// <remarks/>
        oPurchaseDownPayments,
        
        /// <remarks/>
        oStockTransferDraft,
        
        /// <remarks/>
        oPurchaseQuotations,
        
        /// <remarks/>
        oInventoryTransferRequest,
        
        /// <remarks/>
        oPurchaseRequest,
        
        /// <remarks/>
        oReturnRequest,
        
        /// <remarks/>
        oGoodsReturnRequest,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://127.0.0.1/SAP/")]
    public enum Languages {
        
        /// <remarks/>
        ln_Null,
        
        /// <remarks/>
        ln_Hebrew,
        
        /// <remarks/>
        ln_Spanish_Ar,
        
        /// <remarks/>
        ln_English,
        
        /// <remarks/>
        ln_Polish,
        
        /// <remarks/>
        ln_English_Sg,
        
        /// <remarks/>
        ln_Spanish_Pa,
        
        /// <remarks/>
        ln_English_Gb,
        
        /// <remarks/>
        ln_German,
        
        /// <remarks/>
        ln_Serbian,
        
        /// <remarks/>
        ln_Danish,
        
        /// <remarks/>
        ln_Norwegian,
        
        /// <remarks/>
        ln_Italian,
        
        /// <remarks/>
        ln_Hungarian,
        
        /// <remarks/>
        ln_Chinese,
        
        /// <remarks/>
        ln_Dutch,
        
        /// <remarks/>
        ln_Finnish,
        
        /// <remarks/>
        ln_Greek,
        
        /// <remarks/>
        ln_Portuguese,
        
        /// <remarks/>
        ln_Swedish,
        
        /// <remarks/>
        ln_English_Cy,
        
        /// <remarks/>
        ln_French,
        
        /// <remarks/>
        ln_Spanish,
        
        /// <remarks/>
        ln_Russian,
        
        /// <remarks/>
        ln_Spanish_La,
        
        /// <remarks/>
        ln_Czech_Cz,
        
        /// <remarks/>
        ln_Slovak_Sk,
        
        /// <remarks/>
        ln_Korean_Kr,
        
        /// <remarks/>
        ln_Portuguese_Br,
        
        /// <remarks/>
        ln_Japanese_Jp,
        
        /// <remarks/>
        ln_Turkish_Tr,
        
        /// <remarks/>
        ln_Arabic,
        
        /// <remarks/>
        ln_Ukrainian,
        
        /// <remarks/>
        ln_TrdtnlChinese_Hk,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://127.0.0.1/SAP/")]
    public enum Commands {
        
        /// <remarks/>
        ExecuteSQL,
        
        /// <remarks/>
        Format_DateToString,
        
        /// <remarks/>
        Format_StringToDate,
        
        /// <remarks/>
        GetBPList,
        
        /// <remarks/>
        GetBusinessObjectTemplate,
        
        /// <remarks/>
        GetBusinessObjectXmlSchema,
        
        /// <remarks/>
        GetContactEmployees,
        
        /// <remarks/>
        GetItemList,
        
        /// <remarks/>
        GetLocalCurrency,
        
        /// <remarks/>
        GetObjectPermission,
        
        /// <remarks/>
        GetSystemCurrency,
        
        /// <remarks/>
        GetTableFieldList,
        
        /// <remarks/>
        GetTableList,
        
        /// <remarks/>
        GetUserList,
        
        /// <remarks/>
        GetWareHouseList,
        
        /// <remarks/>
        AddObject,
        
        /// <remarks/>
        UpdateObject,
        
        /// <remarks/>
        RemoveObject,
        
        /// <remarks/>
        CancelObject,
        
        /// <remarks/>
        CloseObject,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InformationCompletedEventHandler(object sender, InformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InteractCompletedEventHandler(object sender, InteractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InteractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InteractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DIServerBICompletedEventHandler(object sender, DIServerBICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DIServerBICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DIServerBICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateCompletedEventHandler(object sender, ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetBusinessObjectTemplateCompletedEventHandler(object sender, GetBusinessObjectTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBusinessObjectTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBusinessObjectTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReadObjectsCompletedEventHandler(object sender, ReadObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExecuteSQLCompletedEventHandler(object sender, ExecuteSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SBObobCompletedEventHandler(object sender, SBObobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SBObobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SBObobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddObjectCompletedEventHandler(object sender, AddObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateObjectCompletedEventHandler(object sender, UpdateObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DIServicesCompletedEventHandler(object sender, DIServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DIServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DIServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QRCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void TokenCompletedEventHandler(object sender, TokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginSSLCompletedEventHandler(object sender, LoginSSLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginSSLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginSSLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void TESTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591